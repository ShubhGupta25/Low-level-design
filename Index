Low Level Design (LLD) Concepts - Index

S.O.L.I.D Principles -> Done
Strategy Pattern -> Done
Observer Pattern -> Done
Design Notify-Me Button Functionality -> Done
Decorator Pattern -> Done
Design Pizza Billing System
Factory Pattern
Design Parking Lot
Abstract Factory Pattern
Design  Snake n Ladder game
Chain of Responsibility Pattern
Design Elevator System
Proxy Pattern
Design Car Rental System
Null Object Pattern
Design Logging System
State Pattern
Design Tic-Tac-Toe game
Composite Pattern
Design BookMyShow & Concurrency handling
Adapter Pattern
Design Vending Machine
Singleton Pattern
Design ATM
Builder Pattern
Design Chess game
Prototype Pattern
Design File System
Bridge Pattern
Design Splitwise
FaÃ§ade Pattern
Splitwise Simplify Algorithm / Optimal Accounting Balancing 
Flyweight Pattern
Design CricBuzz / CricketInfo
Command Pattern
Design True Caller
Interpreter Pattern
Design Car Booking Service like Ola, Uber
Iterator Pattern
Design Online Hotel Booking System
Mediator Pattern
Design Library Management System
Memento Pattern
Design  Traffic Light System
Template Method Pattern
Design Meeting Scheduler 
Visitor Pattern
Design Online Voting System
Design Inventory Management System
Design Cache Mechanism
Design LinkedIn 
Design Amazon 
Design Airline Management System 
Design Stock Exchange System
Design Learning Management System
Design a Calendar Application
Design (LLD) Payment System
Design (LLD) Chat based system
Design Food delivery app like Swiggy and Zomato
Design Community Discussion Platform
Design Restaurant Management System
Design Bowling Alley Machine 
Design (LLD) Rate Limiter


Categorized: 

1. Object-Oriented Design Principles

   - SOLID Principles
   - Design Patterns (Creational, Structural, Behavioral)
   - Encapsulation, Abstraction, Inheritance, Polymorphism

2. Class Diagrams & UML

   - Class, Object, Sequence, Activity Diagrams
   - Relationships: Association, Aggregation, Composition, Inheritance

3. System Design Components

   - Service Layer, DAO Layer, Controllers
   - DTOs, Value Objects, Entities

4. Design Patterns

   - Singleton, Factory, Builder, Prototype
   - Adapter, Decorator, Proxy, Facade
   - Observer, Strategy, Command, State, Template Method

5. API Design

   - RESTful APIs, Versioning, Error Handling
   - Request/Response Models

6. Database Design

   - ER Diagrams, Normalization, Indexing
   - Transactions, ACID Properties

7. Caching

   - Types of Caching (In-memory, Distributed)
   - Cache Invalidation Strategies

8. Concurrency & Thread Safety

   - Locks, Synchronization, Deadlocks
   - Thread-safe Collections

9. Testing

   - Unit Testing, Integration Testing, Mocking

10. Code Quality

    - Code Reviews, Static Analysis, Refactoring

11. Logging & Monitoring

    - Log Levels, Structured Logging, Metrics

12. Security
    - Authentication, Authorization, Input Validation



Command to query and understand->
explain strategy pattern in lld with example, when to use, how to use, advantages, disadvantages